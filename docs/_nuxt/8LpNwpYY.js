import{r as V,_ as h}from"./C6Gf0xBX.js";import{u as b,g as r}from"./Dgu_NOG_.js";import{u as $}from"./CJDABd-u.js";import{_ as k,K as R,L as l,i as B,M as n,G,A as z,o as s,c as i,a as U,O as y,l as v,d as j,t as w,B as F,F as N,C as P,R as _,D,w as L,P as T,Q as E}from"./CWvnpu3D.js";import"./BX-j-myY.js";const I={wrapper:"relative flex items-start",fieldset:"",legend:"text-sm font-medium text-gray-700 dark:text-gray-200 mb-1",default:{color:"primary"}},d=R(l.ui.strategy,l.ui.radioGroup,I),K=R(l.ui.strategy,l.ui.radio,V),M=B({components:{URadio:h},inheritAttrs:!1,props:{modelValue:{type:[String,Number,Object],default:""},name:{type:String,default:null},legend:{type:String,default:null},options:{type:Array,default:()=>[]},optionAttribute:{type:String,default:"label"},valueAttribute:{type:String,default:"value"},disabled:{type:Boolean,default:!1},color:{type:String,default:()=>d.default.color,validator(e){return l.ui.colors.includes(e)}},class:{type:[String,Object,Array],default:()=>""},ui:{type:Object,default:()=>({})},uiRadio:{type:Object,default:()=>({})}},emits:["update:modelValue","change"],setup(e,{emit:o}){const{ui:m,attrs:c}=b("radioGroup",n(e,"ui"),d,n(e,"class")),{ui:g}=b("radio",n(e,"uiRadio"),K),{emitFormChange:p,color:u,name:t}=$(e,d);G("radio-group",{color:u,name:t});const f=a=>{o("update:modelValue",a),o("change",a),p()},A=a=>r(a,e.valueAttribute,r(a,e.optionAttribute)),C=a=>r(a,e.optionAttribute,r(a,e.valueAttribute)),O=a=>["string","number","boolean"].includes(typeof a)?{value:a,label:a}:{...a,value:A(a),label:C(a)},S=z(()=>e.options.map(a=>O(a)));return{ui:m,uiRadio:g,attrs:c,normalizedOptions:S,onUpdate:f}}});function Q(e,o,m,c,g,p){const u=h;return s(),i("div",{class:y(e.ui.wrapper)},[U("fieldset",_(e.attrs,{class:e.ui.fieldset}),[e.legend||e.$slots.legend?(s(),i("legend",{key:0,class:y(e.ui.legend)},[v(e.$slots,"legend",{},()=>[j(w(e.legend),1)])],2)):F("",!0),(s(!0),i(N,null,P(e.normalizedOptions,t=>(s(),D(u,{key:t.value,label:t.label,"model-value":e.modelValue,value:t.value,help:t.help,disabled:t.disabled||e.disabled,ui:e.uiRadio,onChange:f=>e.onUpdate(t.value)},{label:L(()=>[v(e.$slots,"label",T(E({option:t})))]),_:2},1032,["label","model-value","value","help","disabled","ui","onChange"]))),128))],16)],2)}const Y=k(M,[["render",Q]]);export{Y as default};
